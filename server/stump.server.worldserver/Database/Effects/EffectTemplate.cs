using Stump.DofusProtocol.D2oClasses.Tools.D2o;
using Stump.DofusProtocol.D2oClasses;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Database.I18n;

namespace Stump.Server.WorldServer.Database.Effects
{
    public class EffectTemplateRelator
    {
        public static string FetchQuery = "SELECT * FROM effects_templates";
    }

    [TableName("effects_templates")]
    [D2OClass("Effect", "com.ankamagames.dofus.datacenter.effects")]
    public class EffectTemplate : IAssignedByD2O, IAutoGeneratedRecord
    {
        private string m_description;
        // Primitive properties

        [PrimaryKey("Id", false)]
        public int Id
        {
            get;
            set;
        }

        public uint DescriptionId
        {
            get;
            set;
        }

        public string Description => m_description ?? (m_description = TextManager.Instance.GetText(DescriptionId));

        public int IconId
        {
            get;
            set;
        }

        public int Characteristic
        {
            get;
            set;
        }

        public uint Category
        {
            get;
            set;
        }

        public string Operator
        {
            get;
            set;
        }

        public bool ShowInTooltip
        {
            get;
            set;
        }

        public bool UseDice
        {
            get;
            set;
        }

        public bool ForceMinMax
        {
            get;
            set;
        }

        public bool Boost
        {
            get;
            set;
        }

        public bool Active
        {
            get;
            set;
        }

        public bool ShowInSet
        {
            get;
            set;
        }

        public int BonusType
        {
            get;
            set;
        }

        public bool UseInFight
        {
            get;
            set;
        }

        public int OppositeId
        {
            get;
            set;
        }

        public int EffectPriority
        {
            get;
            set;
        }

        #region IAssignedByD2O Members

        public void AssignFields(object d2oObject)
        {
            var effect = (Effect) d2oObject;

            Id = effect.id;
            DescriptionId = effect.descriptionId;
            IconId = effect.iconId;
            Characteristic = effect.characteristic;
            Category = effect.category;
            Operator = effect.@operator;
            ShowInTooltip = effect.showInTooltip;
            UseDice = effect.useDice;
            ForceMinMax = effect.forceMinMax;
            Boost = effect.boost;
            Active = effect.active;
            ShowInSet = effect.showInSet;
            BonusType = effect.bonusType;
            UseInFight = effect.useInFight;
            OppositeId = effect.oppositeId;
            EffectPriority = (int)effect.effectPriority;
        }

        #endregion
    }
}