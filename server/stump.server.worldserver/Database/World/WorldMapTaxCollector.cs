using System;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Maps;

namespace Stump.Server.WorldServer.Database.World
{
    public class WorldMapTaxCollectorRelator
    {
        public static string FetchQuery = "SELECT * FROM world_maps_taxcollector";
    }

    [TableName("world_maps_taxcollector")]
    public sealed class WorldMapTaxCollectorRecord : IAutoGeneratedRecord
    {
        private Map m_map;

        [PrimaryKey("Id")]
        public int Id
        {
            get;
            set;
        }

        public int GuildId
        {
            get;
            set;
        }

        public int? MapId
        {
            get;
            set;
        }

        [Ignore]
        public Map Map
        {
            get
            {
                if (!MapId.HasValue)
                    return null;

                return m_map ?? (m_map = Game.World.Instance.GetMap(MapId.Value));
            }
            set
            {
                m_map = value;

                if (value == null)
                    MapId = null;
                else
                    MapId = value.Id;
            }
        }

        public int Cell
        {
            get;
            set;
        }

        public int Direction
        {
            get;
            set;
        }

        public short FirstNameId
        {
            get;
            set;
        }

        public short LastNameId
        {
            get;
            set;
        }

        public int CallerId
        {
            get;
            set;
        }

        public string CallerName
        {
            get;
            set;
        }

        public DateTime Date
        {
            get;
            set;
        }

        public int GatheredExperience
        {
            get;
            set;
        }

        public long GatheredKamas
        {
            get;
            set;
        }

        public int AttacksCount
        {
            get;
            set;
        }
    }
}
