using System.Collections.Generic;
using Stump.Core.IO;
using Stump.DofusProtocol.D2oClasses;
using Stump.DofusProtocol.D2oClasses.Tools.D2o;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Database.I18n;

namespace Stump.Server.WorldServer.Database.Quests
{
    public class QuestStepRelator
    {
        public static string FetchQuery = "SELECT * FROM quests_steps";
    }

    [TableName("quests_steps")]
    public class QuestStepTemplate : IAutoGeneratedRecord, IAssignedByD2O
    {
        private string m_name;
        private string m_description;
        private string m_objectiveIdsCsv;
        private int[] m_objectiveIds;
        private string m_rewardsIdsCsv;
        private int[] m_rewardsIds;

        public int Id
        {
            get;
            set;
        }

        public int QuestId
        {
            get;
            set;
        }

        public string Name => m_name ?? (m_name = TextManager.Instance.GetText(NameId));

        public uint NameId
        {
            get;
            set;
        }

        public string Description => m_description ?? (m_description = TextManager.Instance.GetText(DescriptionId));

        public uint DescriptionId
        {
            get;
            set;
        }

        public int DialogId
        {
            get;
            set;
        }

        public int OptimalLevel
        {
            get;
            set;
        }

        public double Duration
        {
            get;
            set;
        }

        public bool KamasScaleWithPlayerLevel
        {
            get;
            set;
        }

        public double KamasRatio
        {
            get;
            set;
        }

        public double XpRatio
        {
            get;
            set;
        }

        [NullString]
        public string ObjectiveIdsCSV
        {
            get { return m_objectiveIdsCsv; }
            set
            {
                m_objectiveIdsCsv = value;
                m_objectiveIds = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] ObjectiveIds
        {
            get { return m_objectiveIds ?? (m_objectiveIds = ObjectiveIdsCSV.FromCSV<int>(",")); }
            set
            {
                m_objectiveIds = value;
                m_objectiveIdsCsv = value?.ToCSV(",");
            }
        }

        public QuestObjectiveTemplate[] Objectives
        {
            get;
            set;
        }

        [NullString]
        public string RewardsIdsCSV
        {
            get { return m_rewardsIdsCsv; }
            set
            {
                m_rewardsIdsCsv = value;
                m_rewardsIds = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] RewardsIds
        {
            get { return m_rewardsIds ?? (m_rewardsIds = RewardsIdsCSV.FromCSV<int>(",")); }
            set
            {
                m_rewardsIds = value;
                m_rewardsIdsCsv = value?.ToCSV(",");
            }
        }

        public QuestRewardTemplate[] Rewards
        {
            get;
            set;
        }

        public void AssignFields(object d2oObject)
        {
            var questStep = (QuestStep)d2oObject;
            Id = (int)questStep.Id;
            NameId = questStep.NameId;
            DescriptionId = questStep.descriptionId;
            QuestId = (int)questStep.QuestId;
            DialogId = questStep.DialogId;
            OptimalLevel = (int)questStep.OptimalLevel;
            Duration = questStep.duration;
            ObjectiveIdsCSV = questStep.ObjectiveIds.ToCSV(",");
            RewardsIdsCSV = questStep.RewardsIds.ToCSV(",");
        }
    }
}