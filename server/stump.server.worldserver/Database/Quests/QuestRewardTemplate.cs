using System.Collections.Generic;
using System.Linq;
using Stump.Core.IO;
using Stump.DofusProtocol.D2oClasses;
using Stump.DofusProtocol.D2oClasses.Tools.D2o;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;

namespace Stump.Server.WorldServer.Database.Quests
{
    public class QuestRewardRelator
    {
        public static string FetchQuery = "SELECT * FROM quests_rewards";
    }

    [TableName("quests_rewards")]
    public class QuestRewardTemplate : IAutoGeneratedRecord, IAssignedByD2O
    {
        private string m_itemsRewardCsv;
        private int[] m_itemsReward;
        private string m_itemQuantitiesRewardCsv;
        private int[] m_itemQuantitiesReward;
        private string m_emotesRewardCsv;
        private int[] m_emotesReward;
        private int[] m_jobsReward;
        private string m_jobsRewardCsv;
        private int[] m_spellsReward;
        private string m_spellsRewardCsv;

        public int Id
        {
            get;
            set;
        }
        public int StepId
        {
            get;
            set;
        }
        public int LevelMin
        {
            get;
            set;
        }
        public int LevelMax
        {
            get;
            set;
        }

        [NullString]
        public string ItemsRewardCSV
        {
            get { return m_itemsRewardCsv; }
            set
            {
                m_itemsRewardCsv = value;
                m_itemsReward = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] ItemsReward
        {
            get { return m_itemsReward ?? (m_itemsReward = ItemsRewardCSV.FromCSV<int>(",")); }
            set
            {
                m_itemsReward = value;
                m_itemsRewardCsv = value?.ToCSV(",");
            }
        }

        [NullString]
        public string ItemQuantitiesRewardCSV
        {
            get { return m_itemQuantitiesRewardCsv; }
            set
            {
                m_itemQuantitiesRewardCsv = value;
                m_itemQuantitiesReward = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] ItemQuantitiesReward
        {
            get { return m_itemQuantitiesReward ?? (m_itemQuantitiesReward = ItemQuantitiesRewardCSV.FromCSV<int>(",")); }
            set
            {
                m_itemQuantitiesReward = value;
                m_itemQuantitiesRewardCsv = value?.ToCSV(",");
            }
        }

        [NullString]
        public string EmotesRewardCSV
        {
            get { return m_emotesRewardCsv; }
            set
            {
                m_emotesRewardCsv = value;
                m_emotesReward = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] EmotesReward
        {
            get { return m_emotesReward ?? (m_emotesReward = EmotesRewardCSV.FromCSV<int>(",")); }
            set
            {
                m_emotesReward = value;
                m_emotesRewardCsv = value?.ToCSV(",");
            }
        }

        [NullString]
        public string JobsRewardCSV
        {
            get { return m_jobsRewardCsv; }
            set
            {
                m_jobsRewardCsv = value;
                m_jobsReward = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] JobsReward
        {
            get { return m_jobsReward ?? (m_jobsReward = JobsRewardCSV.FromCSV<int>(",")); }
            set
            {
                m_jobsReward = value;
                m_jobsRewardCsv = value?.ToCSV(",");
            }
        }

        [NullString]
        public string SpellsRewardCSV
        {
            get { return m_spellsRewardCsv; }
            set
            {
                m_spellsRewardCsv = value;
                m_spellsReward = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] SpellsReward
        {
            get { return m_spellsReward ?? (m_spellsReward = SpellsRewardCSV.FromCSV<int>(",")); }
            set
            {
                m_spellsReward = value;
                m_spellsRewardCsv = value?.ToCSV(",");
            }
        }


        public void AssignFields(object d2oObject)
        {
            var reward = (QuestStepRewards)d2oObject;
            Id = (int)reward.id;
            StepId = (int)reward.stepId;
            LevelMin = reward.LevelMin;
            LevelMax = reward.LevelMax;
            ItemsRewardCSV = reward.itemsReward.Select(x => x[0]).ToCSV(",");
            ItemQuantitiesRewardCSV = reward.itemsReward.Select(x => x[1]).ToCSV(",");
            EmotesRewardCSV = reward.emotesReward.ToCSV(",");
            JobsRewardCSV = reward.JobsReward.ToCSV(",");
            SpellsRewardCSV = reward.SpellsReward.ToCSV(",");
        }
    }
}