using System;
using System.Linq;
using Stump.Core.IO;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;

namespace Stump.Server.WorldServer.Database.Guilds
{
    public class GuildRelator
    {
        public static string FetchQuery = "SELECT * FROM guilds";
        /// <summary>
        /// Use string.Format
        /// </summary>
        public static string FetchById = "SELECT * FROM guilds WHERE Id={0}";
    }

    [TableName("guilds")]
    public class GuildRecord : IAutoGeneratedRecord
    {
        [PrimaryKey("Id", false)]
        public int Id
        {
            get;
            set;
        }

        [Ignore]
        public bool IsNew
        {
            get;
            set;
        }

        public DateTime CreationDate
        {
            get;
            set;
        }

        public string Name
        {
            get;
            set;
        }

        public long Experience
        {
            get;
            set;
        }

        public uint Boost
        {
            get;
            set;
        }

        public int Prospecting
        {
            get;
            set;
        }

        public int Wisdom
        {
            get;
            set;
        }

        public int Pods
        {
            get;
            set;
        }

        public int MaxTaxCollectors
        {
            get;
            set;
        }

        private int[] m_spells;
        private string m_spellsCSV;

        [Ignore]
        public int[] Spells
        {
            get
            {
                return m_spells;
            }
            set
            {
                m_spells = value;
                m_spellsCSV = m_spells.ToCSV(",");
            }
        }

        [NullString]
        public string SpellsCSV
        {
            get
            {
                return m_spellsCSV;
            }
            set
            {
                m_spellsCSV = value;
                m_spells = !string.IsNullOrEmpty(m_spellsCSV) ? m_spellsCSV.FromCSV<int>(",").ToArray() : new int[0];
            }
        }

        public short EmblemBackgroundShape
        {
            get;
            set;
        }

        public int EmblemBackgroundColor
        {
            get;
            set;
        }

        public short EmblemForegroundShape
        {
            get;
            set;
        }

        public int EmblemForegroundColor
        {
            get;
            set;
        }

        [NullString]
        public string MotdContent
        {
            get;
            set;
        }

        public DateTime MotdDate
        {
            get;
            set;
        }

        public int MotdMemberId
        {
            get;
            set;
        }

        [NullString]
        public string BulletinContent
        {
            get;
            set;
        }

        public DateTime BulletinDate
        {
            get;
            set;
        }

        public DateTime LastNotifiedDate
        {
            get;
            set;
        }

        public int BulletinMemberId
        {
            get;
            set;
        }
    }
}
